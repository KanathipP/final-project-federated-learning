version: "3.9"

services:
  # --------------------------
  # Federated server (aggregator)
  # --------------------------
  flwr-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-server
    command: >
      flower-superexec
      flower_version_1.server_app:app
    environment:
      # ถ้ามีคอนฟิกอะไรใน server_app ที่อ่านจาก env ให้เพิ่มตรงนี้
      PYTHONUNBUFFERED: "1"
    # สมมติ server ฟังบนพอร์ต 8080 ใน server_app.py
    ports:
      - "8080:8080"
    networks:
      - flwr-net
    # server ไม่มี data ของ client เลย
    restart: unless-stopped

  # --------------------------
  # Client 1
  # --------------------------
  flwr-client-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-1
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "1"          # map ไป data/1
      # ถ้า client_app หรือ Flower ต้องการรู้ server addr ผ่าน env ก็ใส่ได้ เช่น:
      # SERVER_ADDRESS: "flwr-server:8080"
    volumes:
      - ./data/1:/app/data/1:ro   # client 1 เห็นเฉพาะ subject 1
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

  # --------------------------
  # Client 24
  # --------------------------
  flwr-client-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-2
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "2"
      # SERVER_ADDRESS: "flwr-server:8080"
    volumes:
      - ./data/2:/app/data/2:ro
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

  flwr-client-3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-3
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "3"
    volumes:
      - ./data/3:/app/data/3:ro
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

  flwr-client-4:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-4
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "4"
    volumes:
      - ./data/4:/app/data/4:ro
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

  flwr-client-5:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-5
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "5"
    volumes:
      - ./data/5:/app/data/5:ro
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

  flwr-client-6:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-6
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "6"
    volumes:
      - ./data/6:/app/data/6:ro
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

  flwr-client-7:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-7
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "7"
    volumes:
      - ./data/7:/app/data/7:ro
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

  flwr-client-8:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-8
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "8"
    volumes:
      - ./data/8:/app/data/8:ro
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

  flwr-client-9:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flwr-client-9
    command: >
      flower-superexec
      flower_version_1.client_app:app
    environment:
      PYTHONUNBUFFERED: "1"
      DATA_ROOT: /app/data
      PARTITION_ID: "9"
    volumes:
      - ./data/9:/app/data/9:ro
    networks:
      - flwr-net
    depends_on:
      - flwr-server
    restart: unless-stopped

# Shared virtual network so server and clients can resolve each other by name
networks:
  flwr-net:
    driver: bridge
